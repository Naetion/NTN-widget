{"remainingRequest":"/Users/buddhika/Documents/GitHub/NTN-widget/NTN-widget/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/buddhika/Documents/GitHub/NTN-widget/NTN-widget/vuepress/components/Generator.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/buddhika/Documents/GitHub/NTN-widget/NTN-widget/vuepress/components/Generator.vue","mtime":1682536531247},{"path":"/Users/buddhika/Documents/GitHub/NTN-widget/NTN-widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/buddhika/Documents/GitHub/NTN-widget/NTN-widget/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/buddhika/Documents/GitHub/NTN-widget/NTN-widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/buddhika/Documents/GitHub/NTN-widget/NTN-widget/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgaW1wb3J0IGJyb3dzZXIgZnJvbSAnLi4vbWl4aW5zL2Jyb3dzZXInOwogIGltcG9ydCBkYXBwIGZyb20gJy4uL21peGlucy9kYXBwJzsKCiAgZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ0dlbmVyYXRvcicsCiAgICBtaXhpbnM6IFsKICAgICAgYnJvd3NlciwKICAgICAgZGFwcCwKICAgIF0sCiAgICBkYXRhICgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBsb2FkZWQ6IGZhbHNlLAogICAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICAgIGN1cnJlbnROZXR3b3JrOiBudWxsLAogICAgICAgIHRva2VuOiB7CiAgICAgICAgICBhZGRyZXNzOiAnJywKICAgICAgICAgIG5hbWU6ICcnLAogICAgICAgICAgc3ltYm9sOiAnJywKICAgICAgICAgIGRlY2ltYWxzOiAnJywKICAgICAgICAgIGxvZ286ICcnLAogICAgICAgIH0sCiAgICAgIH07CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgdG9rZW5UeXBlICgpIHsKICAgICAgICByZXR1cm4gdGhpcy5uZXR3b3JrLmN1cnJlbnQgPyB0aGlzLm5ldHdvcmsuY3VycmVudC50b2tlblR5cGUgOiAnRVJDMjAnOwogICAgICB9LAogICAgICBibG9ja2NoYWluICgpIHsKICAgICAgICByZXR1cm4gdGhpcy5uZXR3b3JrLmN1cnJlbnQgPyB0aGlzLm5ldHdvcmsuY3VycmVudC5ibG9ja2NoYWluIDogJ0V0aGVyZXVtJzsKICAgICAgfSwKICAgIH0sCiAgICBtb3VudGVkICgpIHsKICAgICAgdGhpcy5jdXJyZW50TmV0d29yayA9IHRoaXMuZ2V0UGFyYW0oJ25ldHdvcmsnKSB8fCB0aGlzLm5ldHdvcmsuZGVmYXVsdDsKICAgICAgdGhpcy5pbml0RGFwcCgpOwogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgYXN5bmMgaW5pdERhcHAgKCkgewogICAgICAgIHRoaXMubmV0d29yay5jdXJyZW50ID0gdGhpcy5uZXR3b3JrLmxpc3RbdGhpcy5jdXJyZW50TmV0d29ya107CiAgICAgICAgdHJ5IHsKICAgICAgICAgIGF3YWl0IHRoaXMuaW5pdFdlYjModGhpcy5jdXJyZW50TmV0d29yaywgdHJ1ZSk7CgogICAgICAgICAgdGhpcy4kdmFsaWRhdG9yLmV4dGVuZCgnZXRoX2FkZHJlc3MnLCB7CiAgICAgICAgICAgIGdldE1lc3NhZ2U6IGZpZWxkID0+ICdJbnNlcnQgYSB2YWxpZCB0b2tlbiBhZGRyZXNzLicsCiAgICAgICAgICAgIHZhbGlkYXRlOiB2YWx1ZSA9PiB0aGlzLndlYjMudXRpbHMuaXNBZGRyZXNzKHZhbHVlKSwKICAgICAgICAgIH0pOwoKICAgICAgICAgIHRoaXMudG9rZW4uYWRkcmVzcyA9IHRoaXMuZ2V0UGFyYW0oJ2FkZHJlc3MnKSB8fCAnJzsKCiAgICAgICAgICBpZiAodGhpcy50b2tlbi5hZGRyZXNzICE9PSAnJykgewogICAgICAgICAgICB0aGlzLmdldFRva2VuKCk7CiAgICAgICAgICB9CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgYWxlcnQoZSk7CiAgICAgICAgICBkb2N1bWVudC5sb2NhdGlvbi5ocmVmID0gdGhpcy4kd2l0aEJhc2UoJy8nKTsKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGdldFRva2VuICgpIHsKICAgICAgICB0aGlzLiR2YWxpZGF0b3IudmFsaWRhdGVBbGwoKS50aGVuKGFzeW5jIChyZXN1bHQpID0+IHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBwcm9taXNlL2NhdGNoLW9yLXJldHVybgogICAgICAgICAgaWYgKHJlc3VsdCkgewogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgIHRoaXMubG9hZGVkID0gZmFsc2U7CiAgICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKCiAgICAgICAgICAgICAgdGhpcy5pbml0Q29udHJhY3QodGhpcy50b2tlbi5hZGRyZXNzKTsKCiAgICAgICAgICAgICAgdGhpcy50b2tlbi5uYW1lID0gYXdhaXQgdGhpcy5wcm9taXNpZnkodGhpcy5pbnN0YW5jZXMudG9rZW4ubWV0aG9kcy5uYW1lKCkuY2FsbCk7CiAgICAgICAgICAgICAgdGhpcy50b2tlbi5zeW1ib2wgPSBhd2FpdCB0aGlzLnByb21pc2lmeSh0aGlzLmluc3RhbmNlcy50b2tlbi5tZXRob2RzLnN5bWJvbCgpLmNhbGwpOwogICAgICAgICAgICAgIHRoaXMudG9rZW4uZGVjaW1hbHMgPSAoYXdhaXQgdGhpcy5wcm9taXNpZnkodGhpcy5pbnN0YW5jZXMudG9rZW4ubWV0aG9kcy5kZWNpbWFscygpLmNhbGwpKS52YWx1ZU9mKCk7CgogICAgICAgICAgICAgIGlmICghdGhpcy50b2tlbi5uYW1lIHx8ICF0aGlzLnRva2VuLnN5bWJvbCB8fCAhdGhpcy50b2tlbi5kZWNpbWFscykgewogICAgICAgICAgICAgICAgYWxlcnQoJ0l0IHNlZW1zIHRoYXQgaXQgaXMgbm90IGEgdmFsaWQgVG9rZW4gb3IgeW91IGFyZSBvbiB0aGUgd3JvbmcgbmV0d29yaycpOwogICAgICAgICAgICAgICAgdGhpcy5sb2FkZWQgPSBmYWxzZTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgdGhpcy5sb2FkZWQgPSB0cnVlOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgICBhbGVydCgnSXQgc2VlbXMgdGhhdCBpdCBpcyBub3QgYSB2YWxpZCBUb2tlbiBvciB5b3UgYXJlIG9uIHRoZSB3cm9uZyBuZXR3b3JrJyk7CgogICAgICAgICAgICAgIHRoaXMubG9hZGVkID0gZmFsc2U7CiAgICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSwKICAgICAgY3JlYXRlVG9rZW5QYWdlICgpIHsKICAgICAgICB0aGlzLiR2YWxpZGF0b3IudmFsaWRhdGVBbGwoKS50aGVuKChyZXN1bHQpID0+IHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBwcm9taXNlL2NhdGNoLW9yLXJldHVybgogICAgICAgICAgaWYgKHJlc3VsdCkgewogICAgICAgICAgICBjb25zdCB0b2tlbkhhc2ggPSB0aGlzLndlYjMudXRpbHMudG9IZXgoCiAgICAgICAgICAgICAgSlNPTi5zdHJpbmdpZnkoewogICAgICAgICAgICAgICAgYWRkcmVzczogdGhpcy50b2tlbi5hZGRyZXNzLAogICAgICAgICAgICAgICAgbG9nbzogdGhpcy50b2tlbi5sb2dvLAogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICApOwoKICAgICAgICAgICAgZG9jdW1lbnQubG9jYXRpb24uaHJlZiA9IHRoaXMuJHdpdGhCYXNlKGAvcGFnZS8/aGFzaD0ke3Rva2VuSGFzaH0mbmV0d29yaz0ke3RoaXMuY3VycmVudE5ldHdvcmt9YCk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0sCiAgICB9LAogIH07Cg=="},{"version":3,"sources":["Generator.vue"],"names":[],"mappings":";AAkLA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Generator.vue","sourceRoot":"vuepress/components","sourcesContent":["<template>\n  <b-row class=\"p-0 pt-4\">\n    <b-col v-if=\"!loaded && !loading\" lg=\"8\" offset-lg=\"2\">\n      <b-card bg-variant=\"light\" :title=\"`Create your ${tokenType} Token Widget`\">\n        <p>\n          Create a Widget for your <b>{{ tokenType }}</b>\n          Token on <b>{{ blockchain }}</b>.<br>\n          Enter your Token details, create a Widget and share it with your users.\n        </p>\n        <b-form @submit.prevent=\"getToken\" class=\"mt-3\">\n          <b-row>\n            <b-col lg=\"12\">\n              <b-form-group\n                  label=\"Network\"\n                  label-for=\"network\">\n                <b-form-select id=\"network\"\n                               size=\"lg\"\n                               v-model=\"currentNetwork\"\n                               :disabled=\"loading\"\n                               @input=\"initDapp\">\n                  <b-form-select-option-group v-for=\"b in network.blockchains\" :label=\"b\">\n                    <b-form-select-option v-for=\"(n, k) in network.list\" :value=\"k\" v-if=\"n.blockchain === b\">\n                      {{ n.name }}\n                    </b-form-select-option>\n                  </b-form-select-option-group>\n                </b-form-select>\n              </b-form-group>\n            </b-col>\n            <b-col lg=\"12\">\n              <b-form-group\n                  label=\"Token Address\"\n                  label-for=\"tokenAddress\">\n                <b-input-group>\n                  <b-form-input name=\"tokenAddress\"\n                                placeholder=\"0x123456789...\"\n                                size=\"lg\"\n                                :disabled=\"loading\"\n                                v-model.trim=\"token.address\"\n                                v-validate=\"'required|eth_address'\"\n                                data-vv-as=\"token address\"\n                                :class=\"{'is-invalid': errors.has('tokenAddress')}\">\n                  </b-form-input>\n                  <b-input-group-append>\n                    <b-button :disabled=\"loading\" type=\"submit\" variant=\"success\">\n                      <b-icon-search></b-icon-search>\n                    </b-button>\n                  </b-input-group-append>\n                </b-input-group>\n                <small v-show=\"errors.has('tokenAddress')\" class=\"text-danger\">\n                  {{ errors.first('tokenAddress') }}\n                </small>\n              </b-form-group>\n            </b-col>\n          </b-row>\n        </b-form>\n      </b-card>\n    </b-col>\n    <b-col v-if=\"loading\" lg=\"8\" offset-lg=\"2\">\n      <b-card bg-variant=\"light\">\n        <ui--loader :loading=\"loading\"></ui--loader>\n      </b-card>\n    </b-col>\n    <b-col v-if=\"loaded\" lg=\"8\" offset-lg=\"2\">\n      <b-card bg-variant=\"light\">\n        <b-form @submit.prevent=\"createTokenPage\" class=\"mt-3\">\n          <b-row>\n            <b-col lg=\"12\">\n              <b-form-group\n                  label=\"Address\"\n                  label-for=\"tokenAddress\">\n                <b-form-input\n                    id=\"tokenAddress\"\n                    name=\"tokenAddress\"\n                    placeholder=\"Your token address\"\n                    size=\"lg\"\n                    readonly\n                    v-model.trim=\"token.address\"\n                    v-validate=\"'required|eth_address'\"\n                    data-vv-as=\"token address\"\n                    :class=\"{'is-invalid': errors.has('tokenAddress')}\">\n                </b-form-input>\n                <small v-show=\"errors.has('tokenAddress')\" class=\"text-danger\">\n                  {{ errors.first('tokenAddress') }}\n                </small>\n              </b-form-group>\n            </b-col>\n            <b-col lg=\"12\">\n              <b-form-group\n                  label=\"Name\"\n                  label-for=\"tokenName\">\n                <b-form-input\n                    id=\"tokenName\"\n                    name=\"tokenName\"\n                    placeholder=\"Your token name\"\n                    size=\"lg\"\n                    readonly\n                    v-model.trim=\"token.name\"\n                    v-validate=\"'required'\"\n                    data-vv-as=\"token name\"\n                    :class=\"{'is-invalid': errors.has('tokenName')}\">\n                </b-form-input>\n                <small v-show=\"errors.has('tokenName')\" class=\"text-danger\">\n                  {{ errors.first('tokenName') }}\n                </small>\n              </b-form-group>\n            </b-col>\n            <b-col lg=\"12\">\n              <b-form-group\n                  label=\"Symbol\"\n                  label-for=\"tokenSymbol\">\n                <b-form-input\n                    id=\"tokenSymbol\"\n                    name=\"tokenSymbol\"\n                    placeholder=\"Your token symbol\"\n                    size=\"lg\"\n                    readonly\n                    v-model.trim=\"token.symbol\"\n                    v-validate=\"'required'\"\n                    data-vv-as=\"token symbol\"\n                    :class=\"{'is-invalid': errors.has('tokenSymbol')}\">\n                </b-form-input>\n                <small v-show=\"errors.has('tokenSymbol')\" class=\"text-danger\">\n                  {{ errors.first('tokenSymbol') }}\n                </small>\n              </b-form-group>\n            </b-col>\n            <b-col lg=\"12\">\n              <b-form-group\n                  label=\"Decimals\"\n                  label-for=\"tokenDecimals\">\n                <b-form-input\n                    id=\"tokenDecimals\"\n                    name=\"tokenDecimals\"\n                    placeholder=\"Your token decimals\"\n                    size=\"lg\"\n                    readonly\n                    v-model.trim=\"token.decimals\"\n                    type=\"number\"\n                    min=\"0\"\n                    max=\"36\"\n                    step=\"1\"\n                    v-validate=\"'required'\"\n                    data-vv-as=\"token decimals\"\n                    :class=\"{'is-invalid': errors.has('tokenDecimals')}\">\n                </b-form-input>\n                <small v-show=\"errors.has('tokenDecimals')\" class=\"text-danger\">\n                  {{ errors.first('tokenDecimals') }}\n                </small>\n              </b-form-group>\n            </b-col>\n            <b-col lg=\"12\">\n              <b-form-group\n                  label=\"Logo (optional)\"\n                  label-for=\"tokenLogo\"\n                  description=\"Suggested: a square SVG or PNG with transparent background (recommended greater than 64x64px).\">\n                <b-form-input\n                    id=\"tokenLogo\"\n                    placeholder=\"Your token logo link\"\n                    size=\"lg\"\n                    v-model.trim=\"token.logo\">\n                </b-form-input>\n              </b-form-group>\n            </b-col>\n          </b-row>\n          <b-row>\n            <b-col lg=\"12\" class=\"mt-3\">\n              <b-button size=\"lg\" variant=\"outline-success\" block type=\"submit\">\n                Create Token Widget\n              </b-button>\n            </b-col>\n          </b-row>\n        </b-form>\n      </b-card>\n    </b-col>\n  </b-row>\n</template>\n\n<script>\n  import browser from '../mixins/browser';\n  import dapp from '../mixins/dapp';\n\n  export default {\n    name: 'Generator',\n    mixins: [\n      browser,\n      dapp,\n    ],\n    data () {\n      return {\n        loaded: false,\n        loading: false,\n        currentNetwork: null,\n        token: {\n          address: '',\n          name: '',\n          symbol: '',\n          decimals: '',\n          logo: '',\n        },\n      };\n    },\n    computed: {\n      tokenType () {\n        return this.network.current ? this.network.current.tokenType : 'ERC20';\n      },\n      blockchain () {\n        return this.network.current ? this.network.current.blockchain : 'Ethereum';\n      },\n    },\n    mounted () {\n      this.currentNetwork = this.getParam('network') || this.network.default;\n      this.initDapp();\n    },\n    methods: {\n      async initDapp () {\n        this.network.current = this.network.list[this.currentNetwork];\n        try {\n          await this.initWeb3(this.currentNetwork, true);\n\n          this.$validator.extend('eth_address', {\n            getMessage: field => 'Insert a valid token address.',\n            validate: value => this.web3.utils.isAddress(value),\n          });\n\n          this.token.address = this.getParam('address') || '';\n\n          if (this.token.address !== '') {\n            this.getToken();\n          }\n        } catch (e) {\n          alert(e);\n          document.location.href = this.$withBase('/');\n        }\n      },\n      getToken () {\n        this.$validator.validateAll().then(async (result) => { // eslint-disable-line promise/catch-or-return\n          if (result) {\n            try {\n              this.loaded = false;\n              this.loading = true;\n\n              this.initContract(this.token.address);\n\n              this.token.name = await this.promisify(this.instances.token.methods.name().call);\n              this.token.symbol = await this.promisify(this.instances.token.methods.symbol().call);\n              this.token.decimals = (await this.promisify(this.instances.token.methods.decimals().call)).valueOf();\n\n              if (!this.token.name || !this.token.symbol || !this.token.decimals) {\n                alert('It seems that it is not a valid Token or you are on the wrong network');\n                this.loaded = false;\n              } else {\n                this.loaded = true;\n              }\n\n              this.loading = false;\n            } catch (e) {\n              alert('It seems that it is not a valid Token or you are on the wrong network');\n\n              this.loaded = false;\n              this.loading = false;\n            }\n          }\n        });\n      },\n      createTokenPage () {\n        this.$validator.validateAll().then((result) => { // eslint-disable-line promise/catch-or-return\n          if (result) {\n            const tokenHash = this.web3.utils.toHex(\n              JSON.stringify({\n                address: this.token.address,\n                logo: this.token.logo,\n              }),\n            );\n\n            document.location.href = this.$withBase(`/page/?hash=${tokenHash}&network=${this.currentNetwork}`);\n          }\n        });\n      },\n    },\n  };\n</script>\n"]}]}