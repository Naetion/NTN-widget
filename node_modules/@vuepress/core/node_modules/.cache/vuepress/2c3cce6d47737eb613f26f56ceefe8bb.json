{"remainingRequest":"/Users/buddhika/Documents/GitHub/NTN-widget/NTN-widget/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/buddhika/Documents/GitHub/NTN-widget/NTN-widget/vuepress/components/Generator.vue?vue&type=template&id=2d225ed9&","dependencies":[{"path":"/Users/buddhika/Documents/GitHub/NTN-widget/NTN-widget/vuepress/components/Generator.vue","mtime":1682536531247},{"path":"/Users/buddhika/Documents/GitHub/NTN-widget/NTN-widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/buddhika/Documents/GitHub/NTN-widget/NTN-widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/buddhika/Documents/GitHub/NTN-widget/NTN-widget/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/buddhika/Documents/GitHub/NTN-widget/NTN-widget/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/buddhika/Documents/GitHub/NTN-widget/NTN-widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/buddhika/Documents/GitHub/NTN-widget/NTN-widget/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}