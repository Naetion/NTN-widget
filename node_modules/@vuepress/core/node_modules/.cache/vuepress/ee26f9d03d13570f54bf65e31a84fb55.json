{"remainingRequest":"/Users/buddhika/Documents/GitHub/NTN-widget/NTN-widget/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/buddhika/Documents/GitHub/NTN-widget/NTN-widget/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/buddhika/Documents/GitHub/NTN-widget/NTN-widget/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/buddhika/Documents/GitHub/NTN-widget/NTN-widget/vuepress/components/Generator.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/buddhika/Documents/GitHub/NTN-widget/NTN-widget/vuepress/components/Generator.vue","mtime":1682536531247},{"path":"/Users/buddhika/Documents/GitHub/NTN-widget/NTN-widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/buddhika/Documents/GitHub/NTN-widget/NTN-widget/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/buddhika/Documents/GitHub/NTN-widget/NTN-widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/buddhika/Documents/GitHub/NTN-widget/NTN-widget/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGJyb3dzZXIgZnJvbSAnLi4vbWl4aW5zL2Jyb3dzZXInOwppbXBvcnQgZGFwcCBmcm9tICcuLi9taXhpbnMvZGFwcCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnR2VuZXJhdG9yJywKICBtaXhpbnM6IFticm93c2VyLCBkYXBwXSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbG9hZGVkOiBmYWxzZSwKICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgIGN1cnJlbnROZXR3b3JrOiBudWxsLAogICAgICB0b2tlbjogewogICAgICAgIGFkZHJlc3M6ICcnLAogICAgICAgIG5hbWU6ICcnLAogICAgICAgIHN5bWJvbDogJycsCiAgICAgICAgZGVjaW1hbHM6ICcnLAogICAgICAgIGxvZ286ICcnCiAgICAgIH0KICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgdG9rZW5UeXBlKCkgewogICAgICByZXR1cm4gdGhpcy5uZXR3b3JrLmN1cnJlbnQgPyB0aGlzLm5ldHdvcmsuY3VycmVudC50b2tlblR5cGUgOiAnRVJDMjAnOwogICAgfSwKICAgIGJsb2NrY2hhaW4oKSB7CiAgICAgIHJldHVybiB0aGlzLm5ldHdvcmsuY3VycmVudCA/IHRoaXMubmV0d29yay5jdXJyZW50LmJsb2NrY2hhaW4gOiAnRXRoZXJldW0nOwogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuY3VycmVudE5ldHdvcmsgPSB0aGlzLmdldFBhcmFtKCduZXR3b3JrJykgfHwgdGhpcy5uZXR3b3JrLmRlZmF1bHQ7CiAgICB0aGlzLmluaXREYXBwKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBpbml0RGFwcCgpIHsKICAgICAgdGhpcy5uZXR3b3JrLmN1cnJlbnQgPSB0aGlzLm5ldHdvcmsubGlzdFt0aGlzLmN1cnJlbnROZXR3b3JrXTsKICAgICAgdHJ5IHsKICAgICAgICBhd2FpdCB0aGlzLmluaXRXZWIzKHRoaXMuY3VycmVudE5ldHdvcmssIHRydWUpOwogICAgICAgIHRoaXMuJHZhbGlkYXRvci5leHRlbmQoJ2V0aF9hZGRyZXNzJywgewogICAgICAgICAgZ2V0TWVzc2FnZTogZmllbGQgPT4gJ0luc2VydCBhIHZhbGlkIHRva2VuIGFkZHJlc3MuJywKICAgICAgICAgIHZhbGlkYXRlOiB2YWx1ZSA9PiB0aGlzLndlYjMudXRpbHMuaXNBZGRyZXNzKHZhbHVlKQogICAgICAgIH0pOwogICAgICAgIHRoaXMudG9rZW4uYWRkcmVzcyA9IHRoaXMuZ2V0UGFyYW0oJ2FkZHJlc3MnKSB8fCAnJzsKICAgICAgICBpZiAodGhpcy50b2tlbi5hZGRyZXNzICE9PSAnJykgewogICAgICAgICAgdGhpcy5nZXRUb2tlbigpOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIGFsZXJ0KGUpOwogICAgICAgIGRvY3VtZW50LmxvY2F0aW9uLmhyZWYgPSB0aGlzLiR3aXRoQmFzZSgnLycpOwogICAgICB9CiAgICB9LAogICAgZ2V0VG9rZW4oKSB7CiAgICAgIHRoaXMuJHZhbGlkYXRvci52YWxpZGF0ZUFsbCgpLnRoZW4oYXN5bmMgcmVzdWx0ID0+IHsKICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIHByb21pc2UvY2F0Y2gtb3ItcmV0dXJuCiAgICAgICAgaWYgKHJlc3VsdCkgewogICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgdGhpcy5sb2FkZWQgPSBmYWxzZTsKICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgICAgICAgdGhpcy5pbml0Q29udHJhY3QodGhpcy50b2tlbi5hZGRyZXNzKTsKICAgICAgICAgICAgdGhpcy50b2tlbi5uYW1lID0gYXdhaXQgdGhpcy5wcm9taXNpZnkodGhpcy5pbnN0YW5jZXMudG9rZW4ubWV0aG9kcy5uYW1lKCkuY2FsbCk7CiAgICAgICAgICAgIHRoaXMudG9rZW4uc3ltYm9sID0gYXdhaXQgdGhpcy5wcm9taXNpZnkodGhpcy5pbnN0YW5jZXMudG9rZW4ubWV0aG9kcy5zeW1ib2woKS5jYWxsKTsKICAgICAgICAgICAgdGhpcy50b2tlbi5kZWNpbWFscyA9IChhd2FpdCB0aGlzLnByb21pc2lmeSh0aGlzLmluc3RhbmNlcy50b2tlbi5tZXRob2RzLmRlY2ltYWxzKCkuY2FsbCkpLnZhbHVlT2YoKTsKICAgICAgICAgICAgaWYgKCF0aGlzLnRva2VuLm5hbWUgfHwgIXRoaXMudG9rZW4uc3ltYm9sIHx8ICF0aGlzLnRva2VuLmRlY2ltYWxzKSB7CiAgICAgICAgICAgICAgYWxlcnQoJ0l0IHNlZW1zIHRoYXQgaXQgaXMgbm90IGEgdmFsaWQgVG9rZW4gb3IgeW91IGFyZSBvbiB0aGUgd3JvbmcgbmV0d29yaycpOwogICAgICAgICAgICAgIHRoaXMubG9hZGVkID0gZmFsc2U7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgdGhpcy5sb2FkZWQgPSB0cnVlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICBhbGVydCgnSXQgc2VlbXMgdGhhdCBpdCBpcyBub3QgYSB2YWxpZCBUb2tlbiBvciB5b3UgYXJlIG9uIHRoZSB3cm9uZyBuZXR3b3JrJyk7CiAgICAgICAgICAgIHRoaXMubG9hZGVkID0gZmFsc2U7CiAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgY3JlYXRlVG9rZW5QYWdlKCkgewogICAgICB0aGlzLiR2YWxpZGF0b3IudmFsaWRhdGVBbGwoKS50aGVuKHJlc3VsdCA9PiB7CiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBwcm9taXNlL2NhdGNoLW9yLXJldHVybgogICAgICAgIGlmIChyZXN1bHQpIHsKICAgICAgICAgIGNvbnN0IHRva2VuSGFzaCA9IHRoaXMud2ViMy51dGlscy50b0hleChKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgICAgIGFkZHJlc3M6IHRoaXMudG9rZW4uYWRkcmVzcywKICAgICAgICAgICAgbG9nbzogdGhpcy50b2tlbi5sb2dvCiAgICAgICAgICB9KSk7CiAgICAgICAgICBkb2N1bWVudC5sb2NhdGlvbi5ocmVmID0gdGhpcy4kd2l0aEJhc2UoYC9wYWdlLz9oYXNoPSR7dG9rZW5IYXNofSZuZXR3b3JrPSR7dGhpcy5jdXJyZW50TmV0d29ya31gKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"names":["browser","dapp","name","mixins","data","loaded","loading","currentNetwork","token","address","symbol","decimals","logo","computed","tokenType","network","current","blockchain","mounted","getParam","default","initDapp","methods","list","initWeb3","$validator","extend","getMessage","field","validate","value","web3","utils","isAddress","getToken","e","alert","document","location","href","$withBase","validateAll","then","result","initContract","promisify","instances","call","valueOf","createTokenPage","tokenHash","toHex","JSON","stringify"],"sources":["vuepress/components/Generator.vue"],"sourcesContent":["<template>\n  <b-row class=\"p-0 pt-4\">\n    <b-col v-if=\"!loaded && !loading\" lg=\"8\" offset-lg=\"2\">\n      <b-card bg-variant=\"light\" :title=\"`Create your ${tokenType} Token Widget`\">\n        <p>\n          Create a Widget for your <b>{{ tokenType }}</b>\n          Token on <b>{{ blockchain }}</b>.<br>\n          Enter your Token details, create a Widget and share it with your users.\n        </p>\n        <b-form @submit.prevent=\"getToken\" class=\"mt-3\">\n          <b-row>\n            <b-col lg=\"12\">\n              <b-form-group\n                  label=\"Network\"\n                  label-for=\"network\">\n                <b-form-select id=\"network\"\n                               size=\"lg\"\n                               v-model=\"currentNetwork\"\n                               :disabled=\"loading\"\n                               @input=\"initDapp\">\n                  <b-form-select-option-group v-for=\"b in network.blockchains\" :label=\"b\">\n                    <b-form-select-option v-for=\"(n, k) in network.list\" :value=\"k\" v-if=\"n.blockchain === b\">\n                      {{ n.name }}\n                    </b-form-select-option>\n                  </b-form-select-option-group>\n                </b-form-select>\n              </b-form-group>\n            </b-col>\n            <b-col lg=\"12\">\n              <b-form-group\n                  label=\"Token Address\"\n                  label-for=\"tokenAddress\">\n                <b-input-group>\n                  <b-form-input name=\"tokenAddress\"\n                                placeholder=\"0x123456789...\"\n                                size=\"lg\"\n                                :disabled=\"loading\"\n                                v-model.trim=\"token.address\"\n                                v-validate=\"'required|eth_address'\"\n                                data-vv-as=\"token address\"\n                                :class=\"{'is-invalid': errors.has('tokenAddress')}\">\n                  </b-form-input>\n                  <b-input-group-append>\n                    <b-button :disabled=\"loading\" type=\"submit\" variant=\"success\">\n                      <b-icon-search></b-icon-search>\n                    </b-button>\n                  </b-input-group-append>\n                </b-input-group>\n                <small v-show=\"errors.has('tokenAddress')\" class=\"text-danger\">\n                  {{ errors.first('tokenAddress') }}\n                </small>\n              </b-form-group>\n            </b-col>\n          </b-row>\n        </b-form>\n      </b-card>\n    </b-col>\n    <b-col v-if=\"loading\" lg=\"8\" offset-lg=\"2\">\n      <b-card bg-variant=\"light\">\n        <ui--loader :loading=\"loading\"></ui--loader>\n      </b-card>\n    </b-col>\n    <b-col v-if=\"loaded\" lg=\"8\" offset-lg=\"2\">\n      <b-card bg-variant=\"light\">\n        <b-form @submit.prevent=\"createTokenPage\" class=\"mt-3\">\n          <b-row>\n            <b-col lg=\"12\">\n              <b-form-group\n                  label=\"Address\"\n                  label-for=\"tokenAddress\">\n                <b-form-input\n                    id=\"tokenAddress\"\n                    name=\"tokenAddress\"\n                    placeholder=\"Your token address\"\n                    size=\"lg\"\n                    readonly\n                    v-model.trim=\"token.address\"\n                    v-validate=\"'required|eth_address'\"\n                    data-vv-as=\"token address\"\n                    :class=\"{'is-invalid': errors.has('tokenAddress')}\">\n                </b-form-input>\n                <small v-show=\"errors.has('tokenAddress')\" class=\"text-danger\">\n                  {{ errors.first('tokenAddress') }}\n                </small>\n              </b-form-group>\n            </b-col>\n            <b-col lg=\"12\">\n              <b-form-group\n                  label=\"Name\"\n                  label-for=\"tokenName\">\n                <b-form-input\n                    id=\"tokenName\"\n                    name=\"tokenName\"\n                    placeholder=\"Your token name\"\n                    size=\"lg\"\n                    readonly\n                    v-model.trim=\"token.name\"\n                    v-validate=\"'required'\"\n                    data-vv-as=\"token name\"\n                    :class=\"{'is-invalid': errors.has('tokenName')}\">\n                </b-form-input>\n                <small v-show=\"errors.has('tokenName')\" class=\"text-danger\">\n                  {{ errors.first('tokenName') }}\n                </small>\n              </b-form-group>\n            </b-col>\n            <b-col lg=\"12\">\n              <b-form-group\n                  label=\"Symbol\"\n                  label-for=\"tokenSymbol\">\n                <b-form-input\n                    id=\"tokenSymbol\"\n                    name=\"tokenSymbol\"\n                    placeholder=\"Your token symbol\"\n                    size=\"lg\"\n                    readonly\n                    v-model.trim=\"token.symbol\"\n                    v-validate=\"'required'\"\n                    data-vv-as=\"token symbol\"\n                    :class=\"{'is-invalid': errors.has('tokenSymbol')}\">\n                </b-form-input>\n                <small v-show=\"errors.has('tokenSymbol')\" class=\"text-danger\">\n                  {{ errors.first('tokenSymbol') }}\n                </small>\n              </b-form-group>\n            </b-col>\n            <b-col lg=\"12\">\n              <b-form-group\n                  label=\"Decimals\"\n                  label-for=\"tokenDecimals\">\n                <b-form-input\n                    id=\"tokenDecimals\"\n                    name=\"tokenDecimals\"\n                    placeholder=\"Your token decimals\"\n                    size=\"lg\"\n                    readonly\n                    v-model.trim=\"token.decimals\"\n                    type=\"number\"\n                    min=\"0\"\n                    max=\"36\"\n                    step=\"1\"\n                    v-validate=\"'required'\"\n                    data-vv-as=\"token decimals\"\n                    :class=\"{'is-invalid': errors.has('tokenDecimals')}\">\n                </b-form-input>\n                <small v-show=\"errors.has('tokenDecimals')\" class=\"text-danger\">\n                  {{ errors.first('tokenDecimals') }}\n                </small>\n              </b-form-group>\n            </b-col>\n            <b-col lg=\"12\">\n              <b-form-group\n                  label=\"Logo (optional)\"\n                  label-for=\"tokenLogo\"\n                  description=\"Suggested: a square SVG or PNG with transparent background (recommended greater than 64x64px).\">\n                <b-form-input\n                    id=\"tokenLogo\"\n                    placeholder=\"Your token logo link\"\n                    size=\"lg\"\n                    v-model.trim=\"token.logo\">\n                </b-form-input>\n              </b-form-group>\n            </b-col>\n          </b-row>\n          <b-row>\n            <b-col lg=\"12\" class=\"mt-3\">\n              <b-button size=\"lg\" variant=\"outline-success\" block type=\"submit\">\n                Create Token Widget\n              </b-button>\n            </b-col>\n          </b-row>\n        </b-form>\n      </b-card>\n    </b-col>\n  </b-row>\n</template>\n\n<script>\n  import browser from '../mixins/browser';\n  import dapp from '../mixins/dapp';\n\n  export default {\n    name: 'Generator',\n    mixins: [\n      browser,\n      dapp,\n    ],\n    data () {\n      return {\n        loaded: false,\n        loading: false,\n        currentNetwork: null,\n        token: {\n          address: '',\n          name: '',\n          symbol: '',\n          decimals: '',\n          logo: '',\n        },\n      };\n    },\n    computed: {\n      tokenType () {\n        return this.network.current ? this.network.current.tokenType : 'ERC20';\n      },\n      blockchain () {\n        return this.network.current ? this.network.current.blockchain : 'Ethereum';\n      },\n    },\n    mounted () {\n      this.currentNetwork = this.getParam('network') || this.network.default;\n      this.initDapp();\n    },\n    methods: {\n      async initDapp () {\n        this.network.current = this.network.list[this.currentNetwork];\n        try {\n          await this.initWeb3(this.currentNetwork, true);\n\n          this.$validator.extend('eth_address', {\n            getMessage: field => 'Insert a valid token address.',\n            validate: value => this.web3.utils.isAddress(value),\n          });\n\n          this.token.address = this.getParam('address') || '';\n\n          if (this.token.address !== '') {\n            this.getToken();\n          }\n        } catch (e) {\n          alert(e);\n          document.location.href = this.$withBase('/');\n        }\n      },\n      getToken () {\n        this.$validator.validateAll().then(async (result) => { // eslint-disable-line promise/catch-or-return\n          if (result) {\n            try {\n              this.loaded = false;\n              this.loading = true;\n\n              this.initContract(this.token.address);\n\n              this.token.name = await this.promisify(this.instances.token.methods.name().call);\n              this.token.symbol = await this.promisify(this.instances.token.methods.symbol().call);\n              this.token.decimals = (await this.promisify(this.instances.token.methods.decimals().call)).valueOf();\n\n              if (!this.token.name || !this.token.symbol || !this.token.decimals) {\n                alert('It seems that it is not a valid Token or you are on the wrong network');\n                this.loaded = false;\n              } else {\n                this.loaded = true;\n              }\n\n              this.loading = false;\n            } catch (e) {\n              alert('It seems that it is not a valid Token or you are on the wrong network');\n\n              this.loaded = false;\n              this.loading = false;\n            }\n          }\n        });\n      },\n      createTokenPage () {\n        this.$validator.validateAll().then((result) => { // eslint-disable-line promise/catch-or-return\n          if (result) {\n            const tokenHash = this.web3.utils.toHex(\n              JSON.stringify({\n                address: this.token.address,\n                logo: this.token.logo,\n              }),\n            );\n\n            document.location.href = this.$withBase(`/page/?hash=${tokenHash}&network=${this.currentNetwork}`);\n          }\n        });\n      },\n    },\n  };\n</script>\n"],"mappings":"AAkLA,OAAAA,OAAA;AACA,OAAAC,IAAA;AAEA;EACAC,IAAA;EACAC,MAAA,GACAH,OAAA,EACAC,IAAA,CACA;EACAG,KAAA;IACA;MACAC,MAAA;MACAC,OAAA;MACAC,cAAA;MACAC,KAAA;QACAC,OAAA;QACAP,IAAA;QACAQ,MAAA;QACAC,QAAA;QACAC,IAAA;MACA;IACA;EACA;EACAC,QAAA;IACAC,UAAA;MACA,YAAAC,OAAA,CAAAC,OAAA,QAAAD,OAAA,CAAAC,OAAA,CAAAF,SAAA;IACA;IACAG,WAAA;MACA,YAAAF,OAAA,CAAAC,OAAA,QAAAD,OAAA,CAAAC,OAAA,CAAAC,UAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAX,cAAA,QAAAY,QAAA,oBAAAJ,OAAA,CAAAK,OAAA;IACA,KAAAC,QAAA;EACA;EACAC,OAAA;IACA,MAAAD,SAAA;MACA,KAAAN,OAAA,CAAAC,OAAA,QAAAD,OAAA,CAAAQ,IAAA,MAAAhB,cAAA;MACA;QACA,WAAAiB,QAAA,MAAAjB,cAAA;QAEA,KAAAkB,UAAA,CAAAC,MAAA;UACAC,UAAA,EAAAC,KAAA;UACAC,QAAA,EAAAC,KAAA,SAAAC,IAAA,CAAAC,KAAA,CAAAC,SAAA,CAAAH,KAAA;QACA;QAEA,KAAAtB,KAAA,CAAAC,OAAA,QAAAU,QAAA;QAEA,SAAAX,KAAA,CAAAC,OAAA;UACA,KAAAyB,QAAA;QACA;MACA,SAAAC,CAAA;QACAC,KAAA,CAAAD,CAAA;QACAE,QAAA,CAAAC,QAAA,CAAAC,IAAA,QAAAC,SAAA;MACA;IACA;IACAN,SAAA;MACA,KAAAT,UAAA,CAAAgB,WAAA,GAAAC,IAAA,OAAAC,MAAA;QAAA;QACA,IAAAA,MAAA;UACA;YACA,KAAAtC,MAAA;YACA,KAAAC,OAAA;YAEA,KAAAsC,YAAA,MAAApC,KAAA,CAAAC,OAAA;YAEA,KAAAD,KAAA,CAAAN,IAAA,cAAA2C,SAAA,MAAAC,SAAA,CAAAtC,KAAA,CAAAc,OAAA,CAAApB,IAAA,GAAA6C,IAAA;YACA,KAAAvC,KAAA,CAAAE,MAAA,cAAAmC,SAAA,MAAAC,SAAA,CAAAtC,KAAA,CAAAc,OAAA,CAAAZ,MAAA,GAAAqC,IAAA;YACA,KAAAvC,KAAA,CAAAG,QAAA,eAAAkC,SAAA,MAAAC,SAAA,CAAAtC,KAAA,CAAAc,OAAA,CAAAX,QAAA,GAAAoC,IAAA,GAAAC,OAAA;YAEA,UAAAxC,KAAA,CAAAN,IAAA,UAAAM,KAAA,CAAAE,MAAA,UAAAF,KAAA,CAAAG,QAAA;cACAyB,KAAA;cACA,KAAA/B,MAAA;YACA;cACA,KAAAA,MAAA;YACA;YAEA,KAAAC,OAAA;UACA,SAAA6B,CAAA;YACAC,KAAA;YAEA,KAAA/B,MAAA;YACA,KAAAC,OAAA;UACA;QACA;MACA;IACA;IACA2C,gBAAA;MACA,KAAAxB,UAAA,CAAAgB,WAAA,GAAAC,IAAA,CAAAC,MAAA;QAAA;QACA,IAAAA,MAAA;UACA,MAAAO,SAAA,QAAAnB,IAAA,CAAAC,KAAA,CAAAmB,KAAA,CACAC,IAAA,CAAAC,SAAA;YACA5C,OAAA,OAAAD,KAAA,CAAAC,OAAA;YACAG,IAAA,OAAAJ,KAAA,CAAAI;UACA,GACA;UAEAyB,QAAA,CAAAC,QAAA,CAAAC,IAAA,QAAAC,SAAA,gBAAAU,SAAA,iBAAA3C,cAAA;QACA;MACA;IACA;EACA;AACA"}]}